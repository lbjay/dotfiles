require 'dotenv'
require 'byebug' # Call 'byebug' anywhere in the code to debug.

# Define a method to facilitate the reloading of code changes.
def reload
  original_verbose = $VERBOSE
  $VERBOSE = nil              # Suppress warning messages (from reloading CONSTANTS).
  load 'load.rb'              # (Re)load all code changes.
  $VERBOSE = original_verbose # Activate warning messages again globally.
  Wgit.logger.level = Logger::DEBUG
  true
end

# Load the most recent code into the session and include modules etc.
reload

# Load the .env vars. Used to connect to the DB etc.
Dotenv.load

# FIXTURES #

def db
  @db ||= Database.new
end

def url
  @url ||= Url.new(
    'http://txti.delightcreative.com/',
    crawled: true,
    date_crawled: Time.now,
    crawl_duration: 0.567890
  )
end

def doc
  @doc ||= Document.new(
    'http://www.mytestsite.com/home',
    File.read('test/mock/fixtures/test_doc.html')
  )
end

# HELPERS #

def index_wiki
  wiki = 'https://github.com/michaeltelford/wgit/wiki'
  opts = {
    follow:         :default,
    allow_paths:    'michaeltelford/wgit/wiki/*',
    disallow_paths: 'michaeltelford/wgit/wiki/*/_history'
  }

  index_site(wiki, opts)
end

def mock_fixtures
  load 'test/mock/fixtures.rb'
end

# Print some basic usage information.
def info
  puts 'To load your code changes type: reload'
  puts 'Available fixture vars include: crawler, url, doc, db'
  puts 'Some helpful database manipulator methods include:'
  puts 'clear_db!, index, index_site, search, db.num_records etc.'
  puts 'To see this information again type: info'
  puts "When you're finished type: exit (or press Ctrl+D)"
end

puts
info
